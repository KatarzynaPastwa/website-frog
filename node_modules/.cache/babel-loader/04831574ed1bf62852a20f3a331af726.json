{"ast":null,"code":"var _jsxFileName = \"/home/katarzynapastwa/Projects/PROJEKT-APP/jfdd12-kawimoka-app/src/Components/PlanDietView/SingleDay/DayPicker.js\";\nimport React from 'react';\nimport s from './SingleDay.module.css';\nexport class DayPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateInner: props.date\n    };\n    this.decrementDate = this.decrementDate.bind(this);\n    this.incrementDate = this.incrementDate.bind(this);\n  }\n\n  decrementDate() {\n    this.setState(prevState => ({\n      dateInner: prevState.dateInner.subtract('days', 1)\n    }));\n  }\n\n  incrementDate() {\n    this.setState(prevState => ({\n      dateInner: prevState.dateInner.add('days', 1)\n    }));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    if (nextProps.date !== this.state.dateInner) {\n      this.setState({\n        dateInner: nextProps.date\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: s.dayPicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.decrementDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"<\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.dateInner.format(\"D MMMM\")), React.createElement(\"button\", {\n      onClick: this.incrementDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \">\"));\n  }\n\n}","map":{"version":3,"sources":["/home/katarzynapastwa/Projects/PROJEKT-APP/jfdd12-kawimoka-app/src/Components/PlanDietView/SingleDay/DayPicker.js"],"names":["React","s","DayPicker","Component","constructor","props","state","dateInner","date","decrementDate","bind","incrementDate","setState","prevState","subtract","add","componentWillReceiveProps","nextProps","render","dayPicker","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wBAAd;AAEA,OAAO,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEF,KAAK,CAACG;AADR,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,GAAG;AACZ,SAAKG,QAAL,CAAeC,SAAD,KAAgB;AAC1BN,MAAAA,SAAS,EAAGM,SAAS,CAACN,SAAV,CAAoBO,QAApB,CAA6B,MAA7B,EAAqC,CAArC;AADc,KAAhB,CAAd;AAGH;;AAEDH,EAAAA,aAAa,GAAG;AACZ,SAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC1BN,MAAAA,SAAS,EAAGM,SAAS,CAACN,SAAV,CAAoBQ,GAApB,CAAwB,MAAxB,EAAgC,CAAhC;AADc,KAAhB,CAAd;AAGH;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC;AACA,QAAIA,SAAS,CAACT,IAAV,KAAmB,KAAKF,KAAL,CAAWC,SAAlC,EAA6C;AAE3C,WAAKK,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAEU,SAAS,CAACT;AAAvB,OAAd;AACD;AACF;;AAGHU,EAAAA,MAAM,GAAI;AACN,WACI;AAAK,MAAA,SAAS,EAAEjB,CAAC,CAACkB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKV,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,GAAtC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWC,SAAX,CAAqBa,MAArB,CAA4B,QAA5B,CAAL,CAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKT,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,GAAtC,CAHJ,CADJ;AAMH;;AAvC0C","sourcesContent":["import React from 'react'\nimport s from './SingleDay.module.css'\n\nexport class DayPicker extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            dateInner: props.date\n        }\n        this.decrementDate = this.decrementDate.bind(this);\n        this.incrementDate = this.incrementDate.bind(this);\n    }\n\n    decrementDate() {\n        this.setState((prevState) => ({\n            dateInner : prevState.dateInner.subtract('days', 1)\n        }));\n    }\n\n    incrementDate() {\n        this.setState((prevState) => ({\n            dateInner : prevState.dateInner.add('days', 1)\n        }));\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        if (nextProps.date !== this.state.dateInner) {\n            \n          this.setState({ dateInner: nextProps.date });\n        }\n      }\n\n\n    render () {\n        return (\n            <div className={s.dayPicker}>\n                <button onClick={this.decrementDate}>{\"<\"}</button>\n                <h2>{this.state.dateInner.format(\"D MMMM\")}</h2>\n                <button onClick={this.incrementDate}>{\">\"}</button>\n            </div>)\n    }\n}"]},"metadata":{},"sourceType":"module"}